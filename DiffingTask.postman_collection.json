{
	"info": {
		"_postman_id": "f1b86e25-c449-4cf9-bcb4-2250b39aa555",
		"name": "DiffingTask",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28222113"
	},
	"item": [
		{
			"name": "API Requests",
			"item": [
				{
					"name": "GET all binaries",
					"item": [
						{
							"name": "Base",
							"item": [
								{
									"name": "Get all binaries",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries",
											"host": [
												"{{apiUrl}}encodedbinaries"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Paging",
							"item": [
								{
									"name": "Get all binaries: page 2, size 2",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?pageNumber=2&pageSize=2",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "2"
												},
												{
													"key": "pageSize",
													"value": "2"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Filtering",
							"item": [
								{
									"name": "Get all binaries: minKeyId",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?minKeyId=102",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "minKeyId",
													"value": "102"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all binaries: maxKeyId",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?maxKeyId=101",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "maxKeyId",
													"value": "101"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all binaries: minKeyId and maxKeyId",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?minKeyId=102&maxKeyId=103",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "minKeyId",
													"value": "102"
												},
												{
													"key": "maxKeyId",
													"value": "103"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all binaries: paging and filtering",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?pageNumber=1&pageSize=1&minKeyId=103",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "1"
												},
												{
													"key": "minKeyId",
													"value": "103"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Searching (temporalily disabled)",
							"item": [
								{
									"name": "Get all binaries: search",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?searchTerm=left",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "searchTerm",
													"value": "left"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all binaries: search by chars",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?searchTerm=ae",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "searchTerm",
													"value": "ae"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all binaries: paging, filtering and searching",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?pageNumber=1&pageSize=1&minKeyId=102&maxKeyId=103&searchTerm=MA",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "1"
												},
												{
													"key": "minKeyId",
													"value": "102"
												},
												{
													"key": "maxKeyId",
													"value": "103"
												},
												{
													"key": "searchTerm",
													"value": "MA"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Sorting",
							"item": [
								{
									"name": "Get all binaries: sort by side ASC, keyId DESC",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?orderBy=side,keyId desc",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "orderBy",
													"value": "side,keyId desc"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all binaries: sort by side DESC, keyId ASC",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?orderBy=side desc,keyId",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "orderBy",
													"value": "side desc,keyId"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all binaries: invalid sort",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?orderBy=size",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "orderBy",
													"value": "size"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all binaries: paging, filtering, searching and sorting",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries?pageNumber=1&pageSize=1&maxKeyId=101&orderBy=side,keyId desc",
											"host": [
												"{{apiUrl}}encodedbinaries"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "1"
												},
												{
													"key": "maxKeyId",
													"value": "101"
												},
												{
													"key": "searchTerm",
													"value": "MA",
													"disabled": true
												},
												{
													"key": "orderBy",
													"value": "side,keyId desc"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "... Content negotiation",
							"item": [
								{
									"name": "Get all binaries: xml format",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/xml",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries",
											"host": [
												"{{apiUrl}}encodedbinaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all binaries: invalid format",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/css",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{apiUrl}}encodedbinaries",
											"host": [
												"{{apiUrl}}encodedbinaries"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "GET binary by keyId and side",
					"item": [
						{
							"name": "Get binary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/102/right",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"102",
										"right"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get binary: 404",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/123456/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"123456",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get binary: 400 invalid side",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/102/middle",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"102",
										"middle"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET L&R binaries by keyId",
					"item": [
						{
							"name": "GET L&R binaries",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/102",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"102"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET binary collection",
					"item": [
						{
							"name": "GET binary collection",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/collection/(101,103)",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"collection",
										"(101,103)"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET diff",
					"item": [
						{
							"name": "Get diff: equal",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/101/diff",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"101",
										"diff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get diff: different size",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/102/diff",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"102",
										"diff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get diff: equal size, different content",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/103/diff",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"103",
										"diff"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST binary",
					"item": [
						{
							"name": "Create binary",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": \"YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXogLSBzYW1lIGxlbiwgZGlmZiBzdHI=\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create binary: invalid Base64 string",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": \"YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXogLSBzYW1lIGxlbiwgZGlmZiBzdHI=!!!???...\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create binary: data param is null",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create binary: invalid route params",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": \"YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXogLSBzYW1lIGxlbiwgZGlmZiBzdHI=\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/left/201",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"left",
										"201"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create binary: invalid route params, p2",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": \"YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXogLSBzYW1lIGxlbiwgZGlmZiBzdHI=\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/0/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"0",
										"left"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST binary collection",
					"item": [
						{
							"name": "Create binary collection",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"keyId\": 201,\r\n        \"side\": \"right\",\r\n        \"data\": \"YWJjREVGZ2hJamtsTU5PUFFyc3RVVnd4WXogLSBzYW1lIGxlbiwgZGlmZiBzdHI=\"\r\n    },\r\n    {\r\n        \"keyId\": 202,\r\n        \"side\": \"left\",\r\n        \"data\": \"MTAyIGxlZnQgZGlmZmVyZW50IHN0cmluZyBzaXpl\"\r\n    },\r\n    {\r\n        \"keyId\": 202,\r\n        \"side\": \"right\",\r\n        \"data\": \"MTAyIHJpZ2h0IGRpZmZlcmVudCBzdHJpbmcgc2l6ZS4uLg==\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/collection",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create binary collection: invalid body",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/collection",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create binary collection: invalid body, p2",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/collection",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create binary collection: invalid body, p3",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{}, {}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/collection",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"collection"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE binary",
					"item": [
						{
							"name": "Delete binary",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT binary",
					"item": [
						{
							"name": "Update binary",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": \"MTAxIGxlZnQgaXMgZXF1YWwgdG8gMTAxIHJpZ2h0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update binary: invalid Base64 string",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": \"MTAxIGxlZnQgaXMgZXF1YWwgdG8gMTAxIHJpZ2h0!!!???...\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update binary: data param is null",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update binary: invalid route params",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": \"YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXogLSBzYW1lIGxlbiwgZGlmZiBzdHI=\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/left/201",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"left",
										"201"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update binary: invalid route params, p2",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": \"YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXogLSBzYW1lIGxlbiwgZGlmZiBzdHI=\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/0/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"0",
										"left"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PATCH binary",
					"item": [
						{
							"name": "Partially update binary",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"replace\",\r\n        \"path\": \"/data\",\r\n        \"value\": \"MTAyIGxlZnQgZGlmZmVyZW50IHN0cmluZyBzaXpl\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Partially update binary: invalid Base64 string",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"replace\",\r\n        \"path\": \"/data\",\r\n        \"value\": \"MTAyIGxlZnQgZGlmZmVyZW50IHN0cmluZyBzaXpl!!!???...\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Partially update binary: invalid operation",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"remove\",\r\n        \"path\": \"/data\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						},
						{
							"name": "Partially update binary: invalid path",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"remove\",\r\n        \"path\": \"/dataBinary\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}encodedbinaries/201/left",
									"host": [
										"{{apiUrl}}encodedbinaries"
									],
									"path": [
										"201",
										"left"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Sample from assignment doc",
			"item": [
				{
					"name": "1, 3, 5, 7, 9 - Get diff",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}encodedbinaries/1/diff",
							"host": [
								"{{apiUrl}}encodedbinaries"
							],
							"path": [
								"1",
								"diff"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Create binary - left",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": \"AAAAAA==\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}encodedbinaries/1/left",
							"host": [
								"{{apiUrl}}encodedbinaries"
							],
							"path": [
								"1",
								"left"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 - Create binary - right",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": \"AAAAAA==\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}encodedbinaries/1/right",
							"host": [
								"{{apiUrl}}encodedbinaries"
							],
							"path": [
								"1",
								"right"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - Update binary - right",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": \"AQABAQ==\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}encodedbinaries/1/right",
							"host": [
								"{{apiUrl}}encodedbinaries"
							],
							"path": [
								"1",
								"right"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Update binary - left",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": \"AAA=\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}encodedbinaries/1/left",
							"host": [
								"{{apiUrl}}encodedbinaries"
							],
							"path": [
								"1",
								"left"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 - Update binary - left (invalid)",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}encodedbinaries/1/left",
							"host": [
								"{{apiUrl}}encodedbinaries"
							],
							"path": [
								"1",
								"left"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiUrl",
			"value": "https://localhost:5001/api/",
			"type": "string"
		}
	]
}